package com.test;

import java.io.IOException;

import org.apache.log4j.Logger;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.AssertJUnit;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.base.TestBase;
import com.pages.HomePage;
import com.pages.LoginPage;
import com.relevantcodes.extentreports.LogStatus;
import com.util.TestUtil;

public class LoginPageTest extends TestBase {
	public class AddScreenshotsToReport extends TestBase {

		public LoginPage loginPage;
		HomePage homePage;
		Alert alert;
		TestUtil objUtilities;
		public ExtentReports extent;
		public ExtentTest extentTest;

		public AddScreenshotsToReport() {
			super();
		}

		

		@BeforeTest
		public void setExtent() {
			extent = new ExtentReports(System.getProperty("user.dir") + "/test-output/ExtentReport.html", true);
			extent.addSystemInfo("Host Name", "Dona Abey");
			extent.addSystemInfo("User Name", "Dona Abey");
			extent.addSystemInfo("Environment", "Learning");
		}
		@BeforeMethod
		public void start() {
			homePage = new HomePage();
			logger.info("Going to Login Page");
			loginPage = homePage.goToLoginPage();
		}
		@BeforeClass
		public void setUp() {
			initialazation();
			homePage = new HomePage();
			objUtilities = new TestUtil();
		}

		@Test(dataProvider = "Sheet1", priority = 0)
		public void loginTest(String user, String pwd, String res) throws Exception {
			switch (res) {
			case "Valid":
				loginPage.login(user, pwd);
				AssertJUnit.assertTrue(true);
				logger.info("Valid user-" + user);

				break;

			case "Invalid":
				loginPage.login(user, pwd);
				String txt = TestUtil.handleAlert(driver, alert);
				AssertJUnit.assertEquals(txt, "User does not exist.");
				loginPage.clickOnClose();
				driver.get(driver.getCurrentUrl());
				break;
			}

		}

		@DataProvider(name = "Sheet1")
		public String[][] getData() throws Exception {
			logger.info("Getting data from Excel File");
			return TestUtil.getDataFromXL();

		}

		

		@AfterMethod
		public void tearDown(ITestResult result) throws IOException {
			if (result.getStatus() == ITestResult.FAILURE) {
				extentTest.log(LogStatus.FAIL, "TEST CASE FAILED IS " + result.getName());
				extentTest.log(LogStatus.FAIL, "TEST CASE FAILED IS " + result.getThrowable());
				String screenshotPath = objUtilities.getScreenshot(driver, result.getName());
				extentTest.log(LogStatus.FAIL, extentTest.addScreenCapture(screenshotPath));
			} else if (result.getStatus() == ITestResult.SKIP) {
				extentTest.log(LogStatus.SKIP, "Test Case SKIPPED IS " + result.getName());
			} else if (result.getStatus() == ITestResult.SUCCESS) {
				extentTest.log(LogStatus.PASS, "Test Case PASSED IS " + result.getName());
				String screenshotPath = objUtilities.getScreenshot(driver, result.getName());
				extentTest.log(LogStatus.PASS, extentTest.addScreenCapture(screenshotPath));
			}
			extent.endTest(extentTest);
		}

		@AfterTest
		public void endReport() {
			extent.flush();
			extent.close();
			driver.quit();
		}
	}

}