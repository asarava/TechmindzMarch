package com.utilities;

import java.time.Duration;

import org.openqa.selenium.Alert;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
  
public class Wrapper {
	public void waitDriver(WebElement pElement,WebDriver driver){
		WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(1000));
		wait.until(ExpectedConditions.elementToBeClickable(pElement));
		}
	public String alertText(WebDriver driver) throws InterruptedException {
		Alert alert=driver.switchTo().alert();
		String alertText=alert.getText();
		alert.accept();
		return alertText;
				
		}
	public void clearData(WebElement button,WebElement name,WebElement password) {
		button.click();
		name.clear();
		password.clear();
	}
	
	public void waitDriverAlert(WebDriver driver) {
		WebDriverWait wait=new WebDriverWait(driver,Duration.ofSeconds(1000));
		wait.until(ExpectedConditions.alertIsPresent());
		}
	public  String alertHandle(WebDriver driver) {
		Alert alert=driver.switchTo().alert();
		String alertText=alert.getText();
		alert.accept();
		System.out.println(alertText);	
		return alertText;
		}
    public void passwordLengthCheck(String pPassword) {
    	int len=pPassword.length();
        if((len>6) && (len<30)) {
        	System.out.println("Password length is matching length criteria");
      	     Assert.assertTrue(true,"Strong password");
          }else {
        	System.out.println("Password is not matching length criteria");
        	 Assert.assertTrue(false,"Please enter a password between 6 and 13 characters"); 
             }
        }
        
    public void contactMessageLength(String contactText) {
        int len=contactText.length();
         if((len>100)) {
            System.out.println("Text length is more than 100");
            String message="message should not exceed 100 words.";
          	Assert.assertEquals(false, true);
            }
         }
    public void getPageSource(WebDriver driver,String pValue) {
    	 String source=driver.getPageSource();
    	   System.out.println(source);
    	 if(source.contains(pValue)) {
    		 Assert.assertTrue(true,pValue+" is available");
    	    }else {
    	    	Assert.assertTrue(false,pValue+" is not available");
    	    }
    	 }
    public void dragAndDrop() {
    	
    }
	}
