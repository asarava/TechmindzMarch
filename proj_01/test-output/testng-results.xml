<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="33" passed="26" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-12T10:37:37 IST" name="Suite" finished-at="2023-03-12T10:39:47 IST" duration-ms="130392">
    <groups>
      <group name="Validations">
        <method signature="HomePageTestCases.addToCart()[pri:4, instance:com.test.HomePageTestCases@1ab3a8c8]" name="addToCart" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.cartAccessCheck()[pri:12, instance:com.test.HomePageTestCases@1ab3a8c8]" name="cartAccessCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.contactTextCheck(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.test.HomePageTestCases@1ab3a8c8]" name="contactTextCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.deleteCart()[pri:14, instance:com.test.HomePageTestCases@1ab3a8c8]" name="deleteCart" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.inValidLoginPasswordLength(java.lang.String,java.lang.String)[pri:21, instance:com.test.HomePageTestCases@1ab3a8c8]" name="inValidLoginPasswordLength" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8]" name="invalidContactsMenuCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8]" name="loginValidation" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.navigateToLink()[pri:22, instance:com.test.HomePageTestCases@1ab3a8c8]" name="navigateToLink" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.placeOrderClose()[pri:13, instance:com.test.HomePageTestCases@1ab3a8c8]" name="placeOrderClose" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.signUpValidPasswordLen(java.lang.String,java.lang.String)[pri:17, instance:com.test.HomePageTestCases@1ab3a8c8]" name="signUpValidPasswordLen" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8]" name="signUpValidations" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8]" name="checkOptionPresent" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.navLinkCheck()[pri:9, instance:com.test.HomePageTestCases@1ab3a8c8]" name="navLinkCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.signUpInValidPasswordLen(java.lang.String,java.lang.String)[pri:18, instance:com.test.HomePageTestCases@1ab3a8c8]" name="signUpInValidPasswordLen" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.validLoginPasswordLength(java.lang.String,java.lang.String)[pri:20, instance:com.test.HomePageTestCases@1ab3a8c8]" name="validLoginPasswordLength" class="com.test.HomePageTestCases"/>
      </group> <!-- Validations -->
      <group name="SignUpValidations">
        <method signature="HomePageTestCases.signUpValidPasswordLen(java.lang.String,java.lang.String)[pri:17, instance:com.test.HomePageTestCases@1ab3a8c8]" name="signUpValidPasswordLen" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8]" name="signUpValidations" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.signUpInValidPasswordLen(java.lang.String,java.lang.String)[pri:18, instance:com.test.HomePageTestCases@1ab3a8c8]" name="signUpInValidPasswordLen" class="com.test.HomePageTestCases"/>
      </group> <!-- SignUpValidations -->
      <group name="SignUp">
        <method signature="HomePageTestCases.Signup(java.lang.String,java.lang.String)[pri:1, instance:com.test.HomePageTestCases@1ab3a8c8]" name="Signup" class="com.test.HomePageTestCases"/>
      </group> <!-- SignUp -->
      <group name="Category">
        <method signature="HomePageTestCases.selectCategory()[pri:3, instance:com.test.HomePageTestCases@1ab3a8c8]" name="selectCategory" class="com.test.HomePageTestCases"/>
      </group> <!-- Category -->
      <group name="ContactValidation">
        <method signature="HomePageTestCases.contactTextCheck(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.test.HomePageTestCases@1ab3a8c8]" name="contactTextCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8]" name="invalidContactsMenuCheck" class="com.test.HomePageTestCases"/>
      </group> <!-- ContactValidation -->
      <group name="Contacts">
        <method signature="HomePageTestCases.contactAccessibilityCheck()[pri:7, instance:com.test.HomePageTestCases@1ab3a8c8]" name="contactAccessibilityCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.validContactsCheck(java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.test.HomePageTestCases@1ab3a8c8]" name="validContactsCheck" class="com.test.HomePageTestCases"/>
      </group> <!-- Contacts -->
      <group name="AboutUs">
        <method signature="HomePageTestCases.clickAudio()[pri:6, instance:com.test.HomePageTestCases@1ab3a8c8]" name="clickAudio" class="com.test.HomePageTestCases"/>
      </group> <!-- AboutUs -->
      <group name="ProcessFlow">
        <method signature="HomePageTestCases.Signup(java.lang.String,java.lang.String)[pri:1, instance:com.test.HomePageTestCases@1ab3a8c8]" name="Signup" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.addToCart()[pri:4, instance:com.test.HomePageTestCases@1ab3a8c8]" name="addToCart" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.contactAccessibilityCheck()[pri:7, instance:com.test.HomePageTestCases@1ab3a8c8]" name="contactAccessibilityCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.placeOrderCheck()[pri:5, instance:com.test.HomePageTestCases@1ab3a8c8]" name="placeOrderCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.selectCategory()[pri:3, instance:com.test.HomePageTestCases@1ab3a8c8]" name="selectCategory" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.validContactsCheck(java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.test.HomePageTestCases@1ab3a8c8]" name="validContactsCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.logIn(java.lang.String,java.lang.String)[pri:2, instance:com.test.HomePageTestCases@1ab3a8c8]" name="logIn" class="com.test.HomePageTestCases"/>
      </group> <!-- ProcessFlow -->
      <group name="LoginValidations">
        <method signature="HomePageTestCases.inValidLoginPasswordLength(java.lang.String,java.lang.String)[pri:21, instance:com.test.HomePageTestCases@1ab3a8c8]" name="inValidLoginPasswordLength" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8]" name="loginValidation" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.validLoginPasswordLength(java.lang.String,java.lang.String)[pri:20, instance:com.test.HomePageTestCases@1ab3a8c8]" name="validLoginPasswordLength" class="com.test.HomePageTestCases"/>
      </group> <!-- LoginValidations -->
      <group name="Login">
        <method signature="HomePageTestCases.logIn(java.lang.String,java.lang.String)[pri:2, instance:com.test.HomePageTestCases@1ab3a8c8]" name="logIn" class="com.test.HomePageTestCases"/>
      </group> <!-- Login -->
      <group name="GeneralValidations">
        <method signature="HomePageTestCases.navigateToLink()[pri:22, instance:com.test.HomePageTestCases@1ab3a8c8]" name="navigateToLink" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8]" name="checkOptionPresent" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.navLinkCheck()[pri:9, instance:com.test.HomePageTestCases@1ab3a8c8]" name="navLinkCheck" class="com.test.HomePageTestCases"/>
      </group> <!-- GeneralValidations -->
      <group name="Cart">
        <method signature="HomePageTestCases.addToCart()[pri:4, instance:com.test.HomePageTestCases@1ab3a8c8]" name="addToCart" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.cartAccessCheck()[pri:12, instance:com.test.HomePageTestCases@1ab3a8c8]" name="cartAccessCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.deleteCart()[pri:14, instance:com.test.HomePageTestCases@1ab3a8c8]" name="deleteCart" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.placeOrderCheck()[pri:5, instance:com.test.HomePageTestCases@1ab3a8c8]" name="placeOrderCheck" class="com.test.HomePageTestCases"/>
        <method signature="HomePageTestCases.placeOrderClose()[pri:13, instance:com.test.HomePageTestCases@1ab3a8c8]" name="placeOrderClose" class="com.test.HomePageTestCases"/>
      </group> <!-- Cart -->
    </groups>
    <test started-at="2023-03-12T10:37:37 IST" name="Test" finished-at="2023-03-12T10:39:47 IST" duration-ms="130392">
      <class name="com.test.HomePageTestCases">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:37 IST" name="setExtent" finished-at="2023-03-12T10:37:37 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:37 IST" name="setUp" finished-at="2023-03-12T10:37:43 IST" duration-ms="5557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Signup(java.lang.String,java.lang.String)[pri:1, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:43 IST" name="Signup" data-provider="dataprovider0" finished-at="2023-03-12T10:37:46 IST" duration-ms="3608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sumiksss11335]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sumi2011]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Signup -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:46 IST" name="tearDown" finished-at="2023-03-12T10:37:47 IST" duration-ms="433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Signup status=SUCCESS method=HomePageTestCases.Signup(java.lang.String,java.lang.String)[pri:1, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="logIn(java.lang.String,java.lang.String)[pri:2, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:47 IST" name="logIn" data-provider="dataprovider0" finished-at="2023-03-12T10:37:51 IST" duration-ms="4372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sumiksss11335]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sumi2011]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logIn -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:51 IST" name="tearDown" finished-at="2023-03-12T10:37:52 IST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logIn status=SUCCESS method=HomePageTestCases.logIn(java.lang.String,java.lang.String)[pri:2, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="selectCategory()[pri:3, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:52 IST" name="selectCategory" finished-at="2023-03-12T10:37:55 IST" duration-ms="3059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCategory -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:55 IST" name="tearDown" finished-at="2023-03-12T10:37:55 IST" duration-ms="434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCategory status=SUCCESS method=HomePageTestCases.selectCategory()[pri:3, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="addToCart()[pri:4, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:37:55 IST" name="addToCart" finished-at="2023-03-12T10:38:05 IST" duration-ms="9860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:05 IST" name="tearDown" finished-at="2023-03-12T10:38:05 IST" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addToCart status=SUCCESS method=HomePageTestCases.addToCart()[pri:4, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="placeOrderCheck()[pri:5, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:05 IST" name="placeOrderCheck" finished-at="2023-03-12T10:38:35 IST" depends-on-methods="com.test.HomePageTestCases.addToCart" duration-ms="30081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:35 IST" name="tearDown" finished-at="2023-03-12T10:38:36 IST" duration-ms="347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderCheck status=SUCCESS method=HomePageTestCases.placeOrderCheck()[pri:5, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="clickAudio()[pri:6, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:36 IST" name="clickAudio" finished-at="2023-03-12T10:38:38 IST" duration-ms="2252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAudio -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:38 IST" name="tearDown" finished-at="2023-03-12T10:38:38 IST" duration-ms="441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickAudio status=SUCCESS method=HomePageTestCases.clickAudio()[pri:6, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="contactAccessibilityCheck()[pri:7, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:38 IST" name="contactAccessibilityCheck" finished-at="2023-03-12T10:38:40 IST" duration-ms="1461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactAccessibilityCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:40 IST" name="tearDown" finished-at="2023-03-12T10:38:40 IST" duration-ms="482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactAccessibilityCheck status=SUCCESS method=HomePageTestCases.contactAccessibilityCheck()[pri:7, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="validContactsCheck(java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:40 IST" name="validContactsCheck" data-provider="dataprovider4" finished-at="2023-03-12T10:38:42 IST" duration-ms="1741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumi6965@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sumi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Testing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validContactsCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:42 IST" name="tearDown" finished-at="2023-03-12T10:38:43 IST" duration-ms="1141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validContactsCheck status=SUCCESS method=HomePageTestCases.validContactsCheck(java.lang.String,java.lang.String,java.lang.String)[pri:8, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="navLinkCheck()[pri:9, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:43 IST" name="navLinkCheck" finished-at="2023-03-12T10:38:44 IST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navLinkCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:44 IST" name="tearDown" finished-at="2023-03-12T10:38:44 IST" duration-ms="318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navLinkCheck status=SUCCESS method=HomePageTestCases.navLinkCheck()[pri:9, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:44 IST" name="invalidContactsMenuCheck" data-provider="dataprovider5" finished-at="2023-03-12T10:38:45 IST" duration-ms="1364" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sumi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Testing]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Thanks for the message!!] but found [Thanks for the message!!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Thanks for the message!!] but found [Thanks for the message!!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at com.test.HomePageTestCases.invalidContactsMenuCheck(HomePageTestCases.java:267)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidContactsMenuCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:45 IST" name="tearDown" finished-at="2023-03-12T10:38:46 IST" duration-ms="794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidContactsMenuCheck status=FAILURE method=HomePageTestCases.invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:46 IST" name="invalidContactsMenuCheck" data-provider="dataprovider5" finished-at="2023-03-12T10:38:48 IST" duration-ms="1416" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumi6965@gmail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sumi789]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Thanks for the message!!] but found [Thanks for the message!!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Thanks for the message!!] but found [Thanks for the message!!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at com.test.HomePageTestCases.invalidContactsMenuCheck(HomePageTestCases.java:267)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidContactsMenuCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:48 IST" name="tearDown" finished-at="2023-03-12T10:38:49 IST" duration-ms="1075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidContactsMenuCheck status=FAILURE method=HomePageTestCases.invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:49 IST" name="invalidContactsMenuCheck" data-provider="dataprovider5" finished-at="2023-03-12T10:38:51 IST" duration-ms="2273" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [Thanks for the message!!] but found [Thanks for the message!!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [Thanks for the message!!] but found [Thanks for the message!!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at com.test.HomePageTestCases.invalidContactsMenuCheck(HomePageTestCases.java:267)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidContactsMenuCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:51 IST" name="tearDown" finished-at="2023-03-12T10:38:53 IST" duration-ms="1872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidContactsMenuCheck status=FAILURE method=HomePageTestCases.invalidContactsMenuCheck(java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="contactTextCheck(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:53 IST" name="contactTextCheck" data-provider="dataprovider6" finished-at="2023-03-12T10:38:55 IST" duration-ms="1779" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumi6965@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sumi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[TestinglenTestinglenTestinglenTestinglenTestinglenTestinglenTestinglenTestinglenTestinglenTestinglenTestinglen]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.test.HomePageTestCases.contactTextCheck(HomePageTestCases.java:283)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactTextCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:55 IST" name="tearDown" finished-at="2023-03-12T10:38:55 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactTextCheck status=FAILURE method=HomePageTestCases.contactTextCheck(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="contactTextCheck(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:55 IST" name="contactTextCheck" data-provider="dataprovider6" finished-at="2023-03-12T10:38:57 IST" duration-ms="1731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumi6965@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sujith]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Testing the text length]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactTextCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:57 IST" name="tearDown" finished-at="2023-03-12T10:38:57 IST" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactTextCheck status=SUCCESS method=HomePageTestCases.contactTextCheck(java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="cartAccessCheck()[pri:12, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:57 IST" name="cartAccessCheck" finished-at="2023-03-12T10:38:59 IST" duration-ms="1431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartAccessCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:59 IST" name="tearDown" finished-at="2023-03-12T10:38:59 IST" duration-ms="408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cartAccessCheck status=SUCCESS method=HomePageTestCases.cartAccessCheck()[pri:12, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="placeOrderClose()[pri:13, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:38:59 IST" name="placeOrderClose" finished-at="2023-03-12T10:39:06 IST" depends-on-methods="com.test.HomePageTestCases.addToCart" duration-ms="6223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrderClose -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:06 IST" name="tearDown" finished-at="2023-03-12T10:39:06 IST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=placeOrderClose status=SUCCESS method=HomePageTestCases.placeOrderClose()[pri:13, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="deleteCart()[pri:14, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:06 IST" name="deleteCart" finished-at="2023-03-12T10:39:15 IST" depends-on-methods="com.test.HomePageTestCases.addToCart" duration-ms="8800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:15 IST" name="tearDown" finished-at="2023-03-12T10:39:15 IST" duration-ms="369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteCart status=SUCCESS method=HomePageTestCases.deleteCart()[pri:14, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:15 IST" name="checkOptionPresent" data-provider="dataprovider2" finished-at="2023-03-12T10:39:16 IST" duration-ms="919" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Search]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.test.HomePageTestCases.checkOptionPresent(HomePageTestCases.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionPresent -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:16 IST" name="tearDown" finished-at="2023-03-12T10:39:16 IST" duration-ms="309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOptionPresent status=FAILURE method=HomePageTestCases.checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:16 IST" name="checkOptionPresent" data-provider="dataprovider2" finished-at="2023-03-12T10:39:17 IST" duration-ms="1111" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Filter]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.test.HomePageTestCases.checkOptionPresent(HomePageTestCases.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionPresent -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:17 IST" name="tearDown" finished-at="2023-03-12T10:39:18 IST" duration-ms="421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOptionPresent status=FAILURE method=HomePageTestCases.checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:18 IST" name="checkOptionPresent" data-provider="dataprovider2" finished-at="2023-03-12T10:39:18 IST" duration-ms="180" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Review]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.test.HomePageTestCases.checkOptionPresent(HomePageTestCases.java:138)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionPresent -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:18 IST" name="tearDown" finished-at="2023-03-12T10:39:18 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOptionPresent status=FAILURE method=HomePageTestCases.checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:18 IST" name="checkOptionPresent" data-provider="dataprovider2" finished-at="2023-03-12T10:39:18 IST" duration-ms="165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CATEGORIES]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOptionPresent -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:18 IST" name="tearDown" finished-at="2023-03-12T10:39:19 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOptionPresent status=SUCCESS method=HomePageTestCases.checkOptionPresent(java.lang.String)[pri:15, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:19 IST" name="signUpValidations" data-provider="dataprovider1" finished-at="2023-03-12T10:39:22 IST" duration-ms="3189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sumikuttinat1222223]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sumi1986]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sign up successful.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpValidations -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:22 IST" name="tearDown" finished-at="2023-03-12T10:39:22 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpValidations status=SUCCESS method=HomePageTestCases.signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:22 IST" name="signUpValidations" data-provider="dataprovider1" finished-at="2023-03-12T10:39:24 IST" duration-ms="1520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sumi]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sign up successful.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpValidations -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:24 IST" name="tearDown" finished-at="2023-03-12T10:39:24 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpValidations status=SUCCESS method=HomePageTestCases.signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:24 IST" name="signUpValidations" data-provider="dataprovider1" finished-at="2023-03-12T10:39:26 IST" duration-ms="1741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sumik]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sign up successful.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpValidations -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:26 IST" name="tearDown" finished-at="2023-03-12T10:39:26 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpValidations status=SUCCESS method=HomePageTestCases.signUpValidations(java.lang.String,java.lang.String,java.lang.String)[pri:16, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="signUpValidPasswordLen(java.lang.String,java.lang.String)[pri:17, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:26 IST" name="signUpValidPasswordLen" finished-at="2023-03-12T10:39:28 IST" duration-ms="1843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nimi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nimi123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpValidPasswordLen -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:28 IST" name="tearDown" finished-at="2023-03-12T10:39:29 IST" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpValidPasswordLen status=SUCCESS method=HomePageTestCases.signUpValidPasswordLen(java.lang.String,java.lang.String)[pri:17, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="signUpInValidPasswordLen(java.lang.String,java.lang.String)[pri:18, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:29 IST" name="signUpInValidPasswordLen" finished-at="2023-03-12T10:39:30 IST" duration-ms="1623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nimi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Nimi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpInValidPasswordLen -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:30 IST" name="tearDown" finished-at="2023-03-12T10:39:31 IST" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpInValidPasswordLen status=SUCCESS method=HomePageTestCases.signUpInValidPasswordLen(java.lang.String,java.lang.String)[pri:18, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:31 IST" name="loginValidation" data-provider="dataprovider3" finished-at="2023-03-12T10:39:34 IST" duration-ms="2917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tetser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[testingthepasswordlength]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:34 IST" name="tearDown" finished-at="2023-03-12T10:39:34 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginValidation status=SUCCESS method=HomePageTestCases.loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:34 IST" name="loginValidation" data-provider="dataprovider3" finished-at="2023-03-12T10:39:36 IST" duration-ms="1967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aami]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aami123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:36 IST" name="tearDown" finished-at="2023-03-12T10:39:36 IST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginValidation status=SUCCESS method=HomePageTestCases.loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:36 IST" name="loginValidation" data-provider="dataprovider3" finished-at="2023-03-12T10:39:39 IST" duration-ms="3210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aami]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aami]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:39 IST" name="tearDown" finished-at="2023-03-12T10:39:40 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginValidation status=SUCCESS method=HomePageTestCases.loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:40 IST" name="loginValidation" data-provider="dataprovider3" finished-at="2023-03-12T10:39:41 IST" duration-ms="1555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginValidation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:41 IST" name="tearDown" finished-at="2023-03-12T10:39:42 IST" duration-ms="369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginValidation status=SUCCESS method=HomePageTestCases.loginValidation(java.lang.String,java.lang.String)[pri:19, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="validLoginPasswordLength(java.lang.String,java.lang.String)[pri:20, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:42 IST" name="validLoginPasswordLength" finished-at="2023-03-12T10:39:43 IST" duration-ms="1612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nimi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Nimi123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginPasswordLength -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:43 IST" name="tearDown" finished-at="2023-03-12T10:39:44 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginPasswordLength status=SUCCESS method=HomePageTestCases.validLoginPasswordLength(java.lang.String,java.lang.String)[pri:20, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="inValidLoginPasswordLength(java.lang.String,java.lang.String)[pri:21, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:44 IST" name="inValidLoginPasswordLength" finished-at="2023-03-12T10:39:45 IST" duration-ms="1365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Nimi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Nimi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inValidLoginPasswordLength -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:45 IST" name="tearDown" finished-at="2023-03-12T10:39:46 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inValidLoginPasswordLength status=SUCCESS method=HomePageTestCases.inValidLoginPasswordLength(java.lang.String,java.lang.String)[pri:21, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="navigateToLink()[pri:22, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:46 IST" name="navigateToLink" finished-at="2023-03-12T10:39:46 IST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:46 IST" name="tearDown" finished-at="2023-03-12T10:39:46 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToLink status=SUCCESS method=HomePageTestCases.navigateToLink()[pri:22, instance:com.test.HomePageTestCases@1ab3a8c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.test.HomePageTestCases@1ab3a8c8]" started-at="2023-03-12T10:39:46 IST" name="endReport" finished-at="2023-03-12T10:39:47 IST" duration-ms="1122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.test.HomePageTestCases -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
